@using MudBlazor.Extensions.Extensions
@using MudBlazor.Extensions.Helper
@using Nextended.Blazor.Extensions
@using MudBlazor
@using MudBlazor.Extensions.Components
@namespace MudBlazor.Extensions.Components


@if (_innerPreview != null)
{
    <div class="mud-ex-fd-close-inner-preview">
        <MudTooltip Placement="Placement.Left" Delay="600" Color="Color.Primary" Text="@($"{_localizer.TryLocalize("Close")} ({_innerPreview.Name})")">
            <MudIconButton Style="float: right;" OnClick="@(ClosePreview)" Icon="@Icons.Filled.Close"></MudIconButton>
        </MudTooltip>
    </div>
    <MudExFileDisplay FileName="@_innerPreview.Name" ContentStream="@_innerPreviewStream" ContentType="@_innerPreview.ContentType" Url="@_innerPreviewUrl"></MudExFileDisplay>
}

else
{
    <div class="mud-ex-file-display-zip">
        @if (AllowToggleTree)
        {
            <MudToggleIconButton @bind-Toggled="@ShowAsTree"
                         Icon="@Icons.Material.Filled.Folder" Color="@Color.Info"
                         ToggledIcon="@Icons.Material.Filled.Folder" ToggledColor="@Color.Success"/>
            <span>@(!ShowAsTree ? _localizer.TryLocalize("Show flat") : _localizer.TryLocalize("Show as Tree"))</span>
        }

        @if (ShowAsTree)
        {
            <MudTreeView Style="width: 100%" T="ZipStructure" Items="@_zipStructure">
                <ItemTemplate>
                    <MudTreeViewItem @bind-Expanded="@context.IsExpanded" Items="@context.Children" Icon="@(context.BrowserFile?.GetIcon() ?? Icons.Filled.Folder)" Text="@context.Name" EndText="2" EndTextTypo="@Typo.caption">
                        <Content>
                            <MudTreeViewItemToggleButton @bind-Expanded="@context.IsExpanded" Visible="@context.HasChildren" />
                            <MudIcon Icon="@(context.IsDirectory ? Icons.Filled.Folder : context.BrowserFile?.GetIcon())" Class="ml-0 mr-2" Color="@Color.Default" />
                            <MudText>
                                <p>
                                    @context.Name
                                    @if (context.IsDirectory)
                                    {
                                        <span class="mud-ex-fd-child-count-label">@context.Children.Count</span>
                                    }
                                </p>
                  
                                <p class="mud-ex-fd-size-display">@Nextended.Blazor.Extensions.BrowserFileExtensions.GetReadableFileSize(context.Size, _localizer, true)</p>
                            </MudText>
                            
                            <span class="mud-ex-fd-tree-actions">
                            @if (AllowDownload) {
                                    <MudTooltip Placement="Placement.Right" Delay="600" Color="Color.Primary" Text="@($"{_localizer.TryLocalize("Download")} ({context.Name})")">
                                        <MudMenu @ref="_downloadMenu" Style="margin-left: 10px; float: right;" Disabled="@context.IsDownloading" Icon="@(context.IsDownloading ? Icons.Material.Filled.Downloading : Icons.Material.Filled.Download)" Color="@ActionButtonColor" Size="Size.Medium" Dense="true" OffsetY="true">
                                            <MudListItem Text="@DownloadText(context, false)" Icon="@Icons.Material.Filled.FileDownload" OnClick="@(() => DownloadAsync(context, false))" />
                                            <MudListItem Text="@DownloadText(context, true)" Icon="@Icons.Material.Filled.Archive" OnClick="@(() => DownloadAsync(context, true))" />
                                        </MudMenu>
                                    </MudTooltip>
                            }
                            @if (!context.IsDirectory && AllowPreview) {
                                <MudIconButton OnClick="@(() => Preview(context.BrowserFile))" Style="margin-left: 5px; float: right;" Icon="@Icons.Material.Filled.ZoomIn" Color="@ActionButtonColor" Size="Size.Medium" />
                            }
                            </span>
                </Content>
            </MudTreeViewItem>
        </ItemTemplate>
    </MudTreeView>
        }
        else
        {
            @foreach (var entry in _zipEntries.Where(file => !file.IsDirectory))
            {
                <MudItem xs="12">
                    <MudItem>
                        <MudAlert Icon="@entry.GetIcon()"
                      Class="mud-alert-message-w-100 mud-alert-message-mt-5">
                            @entry.FullName
                            <p class="mud-ex-fd-size-display" style="width: 300px;">@entry.GetReadableFileSize(_localizer, true)</p>
                            <span style="float: right; margin-top: -35px;">
                                @if (AllowPreview)
                                {
                                    <MudTooltip Placement="Placement.Left" Delay="600" Color="Color.Primary" Text="@($"{_localizer.TryLocalize("Preview")} ({entry.Name})")">
                                        <MudIconButton OnClick="@(() => Preview(entry))" Icon="@Icons.Material.Filled.ZoomIn" Color="@ActionButtonColor" Size="Size.Medium"/>
                                    </MudTooltip>
                                }
                                @if (AllowDownload)
                                {
                                    <MudTooltip Placement="Placement.Left" Delay="600" Color="Color.Primary" Text="@($"{_localizer.TryLocalize("Download")} ({entry.Name})")">
                                        <MudIconButton OnClick="@(() => DownloadAsync(entry))" Icon="@(Icons.Material.Filled.Download)" Color="@ActionButtonColor" Size="Size.Medium"/>
                                    </MudTooltip>
                                }
                            </span>
                        </MudAlert>
                    </MudItem>
                </MudItem>
            }
        }
    </div>
}